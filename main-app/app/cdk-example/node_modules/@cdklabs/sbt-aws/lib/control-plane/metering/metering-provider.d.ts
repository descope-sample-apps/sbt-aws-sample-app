import { Construct } from 'constructs';
import { IMetering } from '@cdklabs/sbt-aws/lib/control-plane/metering/metering-interface/control-plane/metering/metering-interface';
import * as utils from '@cdklabs/sbt-aws/lib/utilst-aws/lib/utils';
import { ControlPlaneAPI } from '@cdklabs/sbt-aws/lib/control-plane/control-plane-api/control-plane/control-plane-api';
/**
 * Encapsulates the list of properties for a MeteringProvider.
 */
export interface MeteringProviderProps {
    /**
     * An implementation of the IMetering interface.
     */
    readonly metering: IMetering;
    /**
     * An IEventManager object to help coordinate events.
     */
    readonly eventManager: utils.IEventManager;
    /**
     * An API resource to use when setting up API endpoints.
     */
    readonly api: ControlPlaneAPI;
}
/**
 * Represents a Metering Provider that handles metering-related operations and
 * connects the concrete IMetering implementation (provided via props.metering)
 * to the control plane.
 *
 * This construct sets up event targets for various metering-related events
 * and adds API routes for 'usage' and 'meters'.
 */
export declare class MeteringProvider extends Construct {
    constructor(scope: Construct, id: string, props: MeteringProviderProps);
}
